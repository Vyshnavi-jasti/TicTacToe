package com.Level2Tasks;

import java.util.Scanner;

public class TicTacToe {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		System.out.println("Level-2 Task-1");
		System.out.println("TicTacToe Game");
		System.out.println("===============");
		
		Scanner sc=new Scanner(System.in);
		boolean PlayAgain=true;
		
		while(PlayAgain) {
			char[][]board= {
					{' ',' ',' '},
					{' ',' ',' '},
					{' ',' ',' '}		
			};
			boolean isPlayer1Turn=true;
			boolean gameOver=false;
			
			while(!gameOver) {
				printBoard(board);
				char currentPlayer=isPlayer1Turn? 'X' : 'O';
				System.out.println("Player " + currentPlayer + ", enter your move (row and column): ");
				int row=sc.nextInt();
				int col=sc.nextInt();
			
			
			if(isValidMove(board,row,col))
			{
				board[row][col]=currentPlayer;
				if(checkWin(board,currentPlayer))
				{
					printBoard(board);
					System.out.println("Player"+currentPlayer+"Wins");
					gameOver=true;
				}
				else if(isBoardFull(board))
				{
					printBoard(board);
					System.out.println("Player"+board+"Game Draws");
					gameOver=true;
				}
				isPlayer1Turn=!isPlayer1Turn;
				}
			else
			{
				System.out.println("Invalid Move Plz Try Again");
			}
		}
			
			System.out.println("Want to PlayAgain? (Yes/No):");
			String PlayAgainChoice=sc.next().toLowerCase();
			PlayAgain=PlayAgainChoice.equals("Yes");
		}
		System.out.println("Thanks For Playing Hope you Enjoyed");
		sc.close();

	}
	
	public static void printBoard(char[][]board)
	{
		System.out.println("====================");
		for(int row=0;row<3;row++)
		{
			System.out.print("|");
			for(int col=0;col<3;col++)
			{
				System.out.print(board[row][col]+"|");
			}
			System.out.println("\n===================");
		}
	}
	public static boolean isValidMove(char[][] board,int row,int col)
	{
		return row>=0 && row<3 && col>=0 && col<3 && board[row][col]==' ';
	}
	
	public static boolean checkWin(char[][]board, char player) {
		for(int i=0;i<3;i++)
		{
			if(board[i][0]==player && board[i][1]==player && board[i][2]==player ) {
				return true;
			}
			if(board[0][i]==player && board[1][i]==player && board[2][i]==player ) {
				return true;
			}
			if(board[0][0]==player && board[1][1]==player && board[2][2]==player ) {
				return true;
			}
		}
			return board[0][2]==player && board[1][1]==player && board[2][0]==player;
		}
	public static boolean isBoardFull(char[][]board)
	{
		for(int row=0;row<3;row++)
		{
			for(int col=0;col<3;col++)
			{
				if(board[row][col]==' ')
				{
					return false;
				}
			}
		}
		return true;
	}
	
	

}
